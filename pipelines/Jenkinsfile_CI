Map props = [
    "DOCKER_IMAGE" : "mariuszdolata/jdk12:0.1"
]

pipeline {
    agent any
    stages {
        stage('Checkout Repository') {
            steps {
                echo 'Checkout Repository'
                script {
                    cleanWs()
                    git branch: 'master', credentialsId: 'github', url: 'https://github.com/mariuszdolata/testRepo.git'
                }
            }
        }


        stage('Compile'){
            agent { docker {
                    image 'mariuszdolata/jdk12:0.1'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                script {
                    echo "Compile process inside docker container"
                    sh 'mvn compile'
                }
            }
        }

        stage('Unit tests'){
            agent { docker {
                    image 'mariuszdolata/jdk12:0.1'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                script {
                    echo "unit tests execution inside docker container"
                    sh 'mvn surefire-report:report'
                }
            }
            post {
                always {
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site/jacoco', reportFiles: 'index.html', reportName: 'Coverage jacoco report', reportTitles: 'coverage'])
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'surefire-report.html', reportName: 'surefire-report', reportTitles: 'surefire'])
                }
            }
        }

        stage('Static Analysis'){
            agent { docker {
                    image 'mariuszdolata/jdk12:0.1'
                    args '-v $HOME/.m2:/root/.m2'
                    }
            }
            steps {
                script {
                    echo "static analysis execution inside docker container"
                    sh 'mvn site'
                    sh 'mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.login=b901c5f57cbb6931f3e5cedaba97ce9e48ff6729'
                }
            }
            post {
                always {
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'findbugs.html', reportName: 'Findbugs report', reportTitles: 'findbugs'])
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'project-info.html', reportName: 'Project-info', reportTitles: 'Project-info'])
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'pmd.html', reportName: 'PMD report', reportTitles: 'pmd'])
                    publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'target/site', reportFiles: 'cpd.html', reportName: 'CPD report', reportTitles: 'cpd'])
                }
            }
        }
    }
}